// ---------------------------------------------------------------------
// flipper.scss
// ------------
// @description SASS mixin to apply flipper anywhere.
// @layer component
// ---------------------------------------------------------------------


// Flipper mixin for the plugin.
@mixin flipper($base: flipper, $flipFromRight: true, $duration: 0.3s, $modal: (width: 400px, height: 400px), $bg: (front: #ccc, back: #aaa)) {
	.#{$base} {
		perspective: 1000px;
		position: relative;

		&__container {
			height: inherit;
			width: 100%;
			will-change: transform;
			transform-style: preserve-3d;
			transition: transform $duration;
			transition-timing-function: cubic-bezier(0.6, 0, 0.2, 1.3);

			.#{$base}--flipped & {
				transform: rotateY(#{getFlipperTransformValue($flipFromRight, false)});

				&--modal {
				}
			}

			&--modal {
				display: flex;
				pointer-events: initial;
				will-change: left, top, height, width, transform, box-shadow;
				transform: rotateY(0deg);
				transition: left $duration, top $duration, height $duration, width $duration, transform $duration, box-shadow $duration;
				transition-timing-function: cubic-bezier(0.6, 0, 0.2, 1.3);

				&.#{$base}--flipped {
					left: calc(50% - #{map-get($modal, width) / 2}) !important;
					top: calc(50% - #{map-get($modal, height) / 2}) !important;
					height: map-get($modal, height) !important;
					width: map-get($modal, width) !important;
					transform: rotateY(#{getFlipperTransformValue($flipFromRight, false)});

					.#{$base}__back {
						box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.3);
					}
				}
			}
		}

		&__front,
		&__back {
			float: left;
			height: inherit;
			width: inherit;
			overflow-y: auto;
			position: relative;
			will-change: max-height;
			transition: max-height 0s ($duration * 0.4);
			transition-timing-function: cubic-bezier(0.6, 0, 0.2, 1.3);
		}

		&__front {
			background-color: map-get($bg, front);
			margin-right: -100%;
			max-height: 100vh;

			.#{$base}--flipped & {
				max-height: 0;
			}
		}
		&__back {
			background-color: map-get($bg, back);
			max-height: 0 !important;
			transform: rotateY(#{getFlipperTransformValue($flipFromRight, true)});

			.#{$base}--flipped & {
				max-height: 100vh !important;
			}
		}
		// Flipper modals.
		&__modals {
			pointer-events: none;
			will-change: auto;

			&--active {
				perspective: 1000px;
				position: fixed;
				left: 0;
				bottom: 0;
				top: 0;
				right: 0;
				z-index: 20;
			}
		}
	}
}

@function getFlipperTransformValue($flipFromRight: true, $open: true) {
	@if ($flipFromRight == true and $open == true) or ($flipFromRight != true and $open != true) {
		@return 180deg;
	} @else {
		@return -180deg;
	}
}
